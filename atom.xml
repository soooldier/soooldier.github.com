<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>soooldier</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://soooldier.com/"/>
  <updated>2016-05-09T06:56:59.000Z</updated>
  <id>http://soooldier.com/</id>
  
  <author>
    <name>soooldier</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>gitflow开发流程</title>
    <link href="http://soooldier.com/2016/05/03/gitflow%E5%BC%80%E5%8F%91%E6%B5%81%E7%A8%8B/"/>
    <id>http://soooldier.com/2016/05/03/gitflow开发流程/</id>
    <published>2016-05-03T08:28:48.000Z</published>
    <updated>2016-05-09T06:56:59.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;http://nvie.com/posts/a-successful-git-branching-model/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Gitflow&lt;/a&gt; 是一种被广泛使用的git分支模型，也可以看成是一种git使用规范。并且它已经被&lt;a href=&quot;https://www.sourcetreeapp.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;sourcetree&lt;/a&gt; 完美支持。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h3&gt;&lt;p&gt;gitflow包括两种分支类型：主分支和辅助分支。主分支负责代码整合或者代码版本号管理；辅助分支是用于解决特定问题的分支，主要包括新功能开发，紧急bug修复等。&lt;/p&gt;
&lt;h3 id=&quot;主分支&quot;&gt;&lt;a href=&quot;#主分支&quot; class=&quot;headerlink&quot; title=&quot;主分支&quot;&gt;&lt;/a&gt;主分支&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;master分支，它管理的是随时可以在生产环境中部署的代码。当开发告一段落并可以上线时，master分支会产生一份可供部署的代码，并且特别重要的是：每一次master分支的更新最好添加对应的版本号标签（TAG，比如v1.2.13）&lt;/li&gt;
&lt;li&gt;develop分支，它用来保存最新开发成果分支。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;辅助分支&quot;&gt;&lt;a href=&quot;#辅助分支&quot; class=&quot;headerlink&quot; title=&quot;辅助分支&quot;&gt;&lt;/a&gt;辅助分支&lt;/h3&gt;&lt;p&gt;辅助分支是真正实施软件开发，bug修复的分支。主要包括：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1. 新功能开发的feature分支
2. 辅助版本发布的release分支
3. 修正生产环境缺陷的hotfix分支
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&quot;feature分支&quot;&gt;&lt;a href=&quot;#feature分支&quot; class=&quot;headerlink&quot; title=&quot;feature分支&quot;&gt;&lt;/a&gt;feature分支&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;从develop分支发起&lt;/li&gt;
&lt;li&gt;代码合回develop分支&lt;/li&gt;
&lt;li&gt;命名以feature-为前缀&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;feature分支通常是在开发一项新功能时候使用的分支，这个分支的代码最后会被合并到develop分支或者直接丢弃。&lt;/p&gt;
&lt;h4 id=&quot;release分支&quot;&gt;&lt;a href=&quot;#release分支&quot; class=&quot;headerlink&quot; title=&quot;release分支&quot;&gt;&lt;/a&gt;release分支&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;从develop分支发起&lt;/li&gt;
&lt;li&gt;代码合回develop分支和master分支&lt;/li&gt;
&lt;li&gt;命名以release-为前缀&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;release分支专门为新版本发布而设计，在该分支上允许做一些小的缺陷验证。&lt;/p&gt;
&lt;h4 id=&quot;hotfix分支&quot;&gt;&lt;a href=&quot;#hotfix分支&quot; class=&quot;headerlink&quot; title=&quot;hotfix分支&quot;&gt;&lt;/a&gt;hotfix分支&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;从master分支派生&lt;/li&gt;
&lt;li&gt;代码合并回master分支和develop分支&lt;/li&gt;
&lt;li&gt;命名以hotfix-为前缀&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;hotfix分支专门用来修复线上紧急bug&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/media/git-model@2x.png&quot; alt=&quot;git-model@2x&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://nvie.com/posts/a-successful-git-branching-model/&quot;&gt;Gitflow&lt;/a&gt; 是一种被广泛使用的git分支模型，也可以看成是一种git使用规范。并且它已经被&lt;a href=&quot;https://www.sourcetreeapp.com/&quot;&gt;sourcetree&lt;/a&gt; 完美支持。&lt;/p&gt;
    
    </summary>
    
    
      <category term="git" scheme="http://soooldier.com/tags/git/"/>
    
  </entry>
  
</feed>
